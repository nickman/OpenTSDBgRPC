// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opentsdb.proto

package net.opentsdb.grpc;

/**
 * Protobuf enum {@code opentsdb.Aggregator}
 */
public enum Aggregator
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>SUM = 0;</code>
   */
  SUM(0),
  /**
   * <code>PFSUM = 1;</code>
   */
  PFSUM(1),
  /**
   * <code>MIN = 2;</code>
   */
  MIN(2),
  /**
   * <code>MAX = 3;</code>
   */
  MAX(3),
  /**
   * <code>AVG = 4;</code>
   */
  AVG(4),
  /**
   * <code>MEDIAN = 5;</code>
   */
  MEDIAN(5),
  /**
   * <code>NONE = 6;</code>
   */
  NONE(6),
  /**
   * <code>MULTIPLY = 7;</code>
   */
  MULTIPLY(7),
  /**
   * <code>DEV = 8;</code>
   */
  DEV(8),
  /**
   * <code>ZIMSUM = 9;</code>
   */
  ZIMSUM(9),
  /**
   * <code>MIMMIN = 10;</code>
   */
  MIMMIN(10),
  /**
   * <code>MIMMAX = 11;</code>
   */
  MIMMAX(11),
  /**
   * <code>COUNT = 12;</code>
   */
  COUNT(12),
  /**
   * <code>FIRST = 13;</code>
   */
  FIRST(13),
  /**
   * <code>LAST = 14;</code>
   */
  LAST(14),
  /**
   * <code>p999 = 15;</code>
   */
  p999(15),
  /**
   * <code>p99 = 16;</code>
   */
  p99(16),
  /**
   * <code>p95 = 17;</code>
   */
  p95(17),
  /**
   * <code>p90 = 18;</code>
   */
  p90(18),
  /**
   * <code>p75 = 19;</code>
   */
  p75(19),
  /**
   * <code>p50 = 20;</code>
   */
  p50(20),
  /**
   * <code>ep999r3 = 21;</code>
   */
  ep999r3(21),
  /**
   * <code>ep99r3 = 22;</code>
   */
  ep99r3(22),
  /**
   * <code>ep95r3 = 23;</code>
   */
  ep95r3(23),
  /**
   * <code>ep90r3 = 24;</code>
   */
  ep90r3(24),
  /**
   * <code>ep75r3 = 25;</code>
   */
  ep75r3(25),
  /**
   * <code>ep50r3 = 26;</code>
   */
  ep50r3(26),
  /**
   * <code>ep999r7 = 27;</code>
   */
  ep999r7(27),
  /**
   * <code>ep99r7 = 28;</code>
   */
  ep99r7(28),
  /**
   * <code>ep95r7 = 29;</code>
   */
  ep95r7(29),
  /**
   * <code>ep90r7 = 30;</code>
   */
  ep90r7(30),
  /**
   * <code>ep75r7 = 31;</code>
   */
  ep75r7(31),
  /**
   * <code>ep50r7 = 32;</code>
   */
  ep50r7(32),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>SUM = 0;</code>
   */
  public static final int SUM_VALUE = 0;
  /**
   * <code>PFSUM = 1;</code>
   */
  public static final int PFSUM_VALUE = 1;
  /**
   * <code>MIN = 2;</code>
   */
  public static final int MIN_VALUE = 2;
  /**
   * <code>MAX = 3;</code>
   */
  public static final int MAX_VALUE = 3;
  /**
   * <code>AVG = 4;</code>
   */
  public static final int AVG_VALUE = 4;
  /**
   * <code>MEDIAN = 5;</code>
   */
  public static final int MEDIAN_VALUE = 5;
  /**
   * <code>NONE = 6;</code>
   */
  public static final int NONE_VALUE = 6;
  /**
   * <code>MULTIPLY = 7;</code>
   */
  public static final int MULTIPLY_VALUE = 7;
  /**
   * <code>DEV = 8;</code>
   */
  public static final int DEV_VALUE = 8;
  /**
   * <code>ZIMSUM = 9;</code>
   */
  public static final int ZIMSUM_VALUE = 9;
  /**
   * <code>MIMMIN = 10;</code>
   */
  public static final int MIMMIN_VALUE = 10;
  /**
   * <code>MIMMAX = 11;</code>
   */
  public static final int MIMMAX_VALUE = 11;
  /**
   * <code>COUNT = 12;</code>
   */
  public static final int COUNT_VALUE = 12;
  /**
   * <code>FIRST = 13;</code>
   */
  public static final int FIRST_VALUE = 13;
  /**
   * <code>LAST = 14;</code>
   */
  public static final int LAST_VALUE = 14;
  /**
   * <code>p999 = 15;</code>
   */
  public static final int p999_VALUE = 15;
  /**
   * <code>p99 = 16;</code>
   */
  public static final int p99_VALUE = 16;
  /**
   * <code>p95 = 17;</code>
   */
  public static final int p95_VALUE = 17;
  /**
   * <code>p90 = 18;</code>
   */
  public static final int p90_VALUE = 18;
  /**
   * <code>p75 = 19;</code>
   */
  public static final int p75_VALUE = 19;
  /**
   * <code>p50 = 20;</code>
   */
  public static final int p50_VALUE = 20;
  /**
   * <code>ep999r3 = 21;</code>
   */
  public static final int ep999r3_VALUE = 21;
  /**
   * <code>ep99r3 = 22;</code>
   */
  public static final int ep99r3_VALUE = 22;
  /**
   * <code>ep95r3 = 23;</code>
   */
  public static final int ep95r3_VALUE = 23;
  /**
   * <code>ep90r3 = 24;</code>
   */
  public static final int ep90r3_VALUE = 24;
  /**
   * <code>ep75r3 = 25;</code>
   */
  public static final int ep75r3_VALUE = 25;
  /**
   * <code>ep50r3 = 26;</code>
   */
  public static final int ep50r3_VALUE = 26;
  /**
   * <code>ep999r7 = 27;</code>
   */
  public static final int ep999r7_VALUE = 27;
  /**
   * <code>ep99r7 = 28;</code>
   */
  public static final int ep99r7_VALUE = 28;
  /**
   * <code>ep95r7 = 29;</code>
   */
  public static final int ep95r7_VALUE = 29;
  /**
   * <code>ep90r7 = 30;</code>
   */
  public static final int ep90r7_VALUE = 30;
  /**
   * <code>ep75r7 = 31;</code>
   */
  public static final int ep75r7_VALUE = 31;
  /**
   * <code>ep50r7 = 32;</code>
   */
  public static final int ep50r7_VALUE = 32;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Aggregator valueOf(int value) {
    return forNumber(value);
  }

  public static Aggregator forNumber(int value) {
    switch (value) {
      case 0: return SUM;
      case 1: return PFSUM;
      case 2: return MIN;
      case 3: return MAX;
      case 4: return AVG;
      case 5: return MEDIAN;
      case 6: return NONE;
      case 7: return MULTIPLY;
      case 8: return DEV;
      case 9: return ZIMSUM;
      case 10: return MIMMIN;
      case 11: return MIMMAX;
      case 12: return COUNT;
      case 13: return FIRST;
      case 14: return LAST;
      case 15: return p999;
      case 16: return p99;
      case 17: return p95;
      case 18: return p90;
      case 19: return p75;
      case 20: return p50;
      case 21: return ep999r3;
      case 22: return ep99r3;
      case 23: return ep95r3;
      case 24: return ep90r3;
      case 25: return ep75r3;
      case 26: return ep50r3;
      case 27: return ep999r7;
      case 28: return ep99r7;
      case 29: return ep95r7;
      case 30: return ep90r7;
      case 31: return ep75r7;
      case 32: return ep50r7;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Aggregator>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Aggregator> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Aggregator>() {
          public Aggregator findValueByNumber(int number) {
            return Aggregator.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return net.opentsdb.grpc.Opentsdb.getDescriptor().getEnumTypes().get(0);
  }

  private static final Aggregator[] VALUES = values();

  public static Aggregator valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Aggregator(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:opentsdb.Aggregator)
}

