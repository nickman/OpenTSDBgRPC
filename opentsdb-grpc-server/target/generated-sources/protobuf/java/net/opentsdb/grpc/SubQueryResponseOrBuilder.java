// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opentsdb.proto

package net.opentsdb.grpc;

public interface SubQueryResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opentsdb.SubQueryResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.opentsdb.MetricTags metricTags = 1;</code>
   */
  boolean hasMetricTags();
  /**
   * <code>.opentsdb.MetricTags metricTags = 1;</code>
   */
  net.opentsdb.grpc.MetricTags getMetricTags();
  /**
   * <code>.opentsdb.MetricTags metricTags = 1;</code>
   */
  net.opentsdb.grpc.MetricTagsOrBuilder getMetricTagsOrBuilder();

  /**
   * <code>repeated string aggregatedTags = 2;</code>
   */
  java.util.List<java.lang.String>
      getAggregatedTagsList();
  /**
   * <code>repeated string aggregatedTags = 2;</code>
   */
  int getAggregatedTagsCount();
  /**
   * <code>repeated string aggregatedTags = 2;</code>
   */
  java.lang.String getAggregatedTags(int index);
  /**
   * <code>repeated string aggregatedTags = 2;</code>
   */
  com.google.protobuf.ByteString
      getAggregatedTagsBytes(int index);

  /**
   * <code>.opentsdb.Tsuids tsuids = 3;</code>
   */
  boolean hasTsuids();
  /**
   * <code>.opentsdb.Tsuids tsuids = 3;</code>
   */
  net.opentsdb.grpc.Tsuids getTsuids();
  /**
   * <code>.opentsdb.Tsuids tsuids = 3;</code>
   */
  net.opentsdb.grpc.TsuidsOrBuilder getTsuidsOrBuilder();

  /**
   * <code>map&lt;int64, double&gt; dps = 4;</code>
   */
  int getDpsCount();
  /**
   * <code>map&lt;int64, double&gt; dps = 4;</code>
   */
  boolean containsDps(
      long key);
  /**
   * Use {@link #getDpsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Long, java.lang.Double>
  getDps();
  /**
   * <code>map&lt;int64, double&gt; dps = 4;</code>
   */
  java.util.Map<java.lang.Long, java.lang.Double>
  getDpsMap();
  /**
   * <code>map&lt;int64, double&gt; dps = 4;</code>
   */

  double getDpsOrDefault(
      long key,
      double defaultValue);
  /**
   * <code>map&lt;int64, double&gt; dps = 4;</code>
   */

  double getDpsOrThrow(
      long key);

  /**
   * <code>repeated .opentsdb.TSDBAnnotation annotations = 5;</code>
   */
  java.util.List<net.opentsdb.grpc.TSDBAnnotation> 
      getAnnotationsList();
  /**
   * <code>repeated .opentsdb.TSDBAnnotation annotations = 5;</code>
   */
  net.opentsdb.grpc.TSDBAnnotation getAnnotations(int index);
  /**
   * <code>repeated .opentsdb.TSDBAnnotation annotations = 5;</code>
   */
  int getAnnotationsCount();
  /**
   * <code>repeated .opentsdb.TSDBAnnotation annotations = 5;</code>
   */
  java.util.List<? extends net.opentsdb.grpc.TSDBAnnotationOrBuilder> 
      getAnnotationsOrBuilderList();
  /**
   * <code>repeated .opentsdb.TSDBAnnotation annotations = 5;</code>
   */
  net.opentsdb.grpc.TSDBAnnotationOrBuilder getAnnotationsOrBuilder(
      int index);

  /**
   * <code>repeated .opentsdb.TSDBAnnotation globalAnnotations = 6;</code>
   */
  java.util.List<net.opentsdb.grpc.TSDBAnnotation> 
      getGlobalAnnotationsList();
  /**
   * <code>repeated .opentsdb.TSDBAnnotation globalAnnotations = 6;</code>
   */
  net.opentsdb.grpc.TSDBAnnotation getGlobalAnnotations(int index);
  /**
   * <code>repeated .opentsdb.TSDBAnnotation globalAnnotations = 6;</code>
   */
  int getGlobalAnnotationsCount();
  /**
   * <code>repeated .opentsdb.TSDBAnnotation globalAnnotations = 6;</code>
   */
  java.util.List<? extends net.opentsdb.grpc.TSDBAnnotationOrBuilder> 
      getGlobalAnnotationsOrBuilderList();
  /**
   * <code>repeated .opentsdb.TSDBAnnotation globalAnnotations = 6;</code>
   */
  net.opentsdb.grpc.TSDBAnnotationOrBuilder getGlobalAnnotationsOrBuilder(
      int index);

  /**
   * <code>.opentsdb.SubQuery subQuery = 7;</code>
   */
  boolean hasSubQuery();
  /**
   * <code>.opentsdb.SubQuery subQuery = 7;</code>
   */
  net.opentsdb.grpc.SubQuery getSubQuery();
  /**
   * <code>.opentsdb.SubQuery subQuery = 7;</code>
   */
  net.opentsdb.grpc.SubQueryOrBuilder getSubQueryOrBuilder();
}
